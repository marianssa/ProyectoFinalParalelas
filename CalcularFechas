#include <iostream>

using namespace std;

main(){
	int distancias_original[6][6];//matriz de distancias original, que no cambia
	int distancias[6][6];//matriz de distancias, cambia con los calculos de fechas

	//llenar con 0
	for(int i = 0; i<6;i++)
	{
	 	cout<<endl;
	 	for(int j = 0; j<6;j++)
	 	{
	 		distancias_original[i][j]=0;
	 		distancias[i][j]=0;
	 	}
	}
	distancias_original[0][1]=5;
	distancias_original[0][2]=4;
	distancias_original[0][3]=6;
	distancias_original[0][4]=2;
	distancias_original[0][5]=4;
	distancias_original[1][2]=6;
	distancias_original[1][3]=3;
	distancias_original[1][4]=5;
	distancias_original[1][5]=7;
	distancias_original[2][3]=3;
	distancias_original[2][4]=3;
	distancias_original[2][5]=1;
	distancias_original[3][4]=9;
	distancias_original[3][5]=4;
	distancias_original[4][5]=6;
	//termina llenado matriz
	for(int i = 0; i<6;i++)
	{
	 	for(int j = 0; j<6;j++)
	 	{
	 		if(i!=j)
	 			if (distancias_original[j][i]!=0)
	 			{
	 				distancias_original[i][j]= distancias_original[j][i];
	 				distancias[i][j]= distancias_original[j][i];
	 				distancias[j][i]= distancias_original[j][i];
	 			}
	 	}
	}



	//mostrar matriz
	for(int i = 0; i<6;i++)
	{
	 	cout<<endl;
	 	for(int j = 0; j<6;j++)
	 	{
	 		cout<<distancias[i][j];
	 		if(j<6-1)
	 			cout<<" - ";
	 	}
	 	cout<< endl;
	}



	//desplazamientos
	int disponibilidad[6];//para ver si puede viajar en la fecha o si ya lo hizo-- valores de 0 o 1
	for(int i=0; i<6; i++){
		disponibilidad[i]=1;
	}

	int posicion_actual[6];//para saber posicion actual de equipo; cambia
	for(int i=0; i<6; i++){//cada equipo en su estadio inicialmente
		posicion_actual[i]=i+1;//---- guarda valores desde 1 (no el 0)
	}

	int posicion_original[6];//para guardar posicion en donde estaba antes de fecha---------------------------------
	for(int i=0; i<6; i++){//cada equipo en su estadio inicialmente
		posicion_original[i]=i+1;//---- guarda valores desde 1 (no el 0)
	}




	int min=999999999;//para encontrar menor distancia en matriz distancia
	int fila, columna;//auxiliares para guardar posicion del menor encontrado
	int numero_fecha=0;//variable para imprimir numero de fecha correspondiente
	int numero_f=0;//aux para variable numero_fecha

	for(int m=0; m<2*(6 -1); m++)//for para repetir cosas hasta completar fechas= 2*(numero_equipos - 1)
	{
		for(int z=0; z< 3; z++)//se repite hasta completar una fecha; numero_equipos/2  por fecha -----------------------------------cambiar 3 por numero_equipos/2
		{	
			for(int i=0; i<6; i++){//recorrer matriz distancia para encontrar menor
				for(int j=0; j<6; j++){
					if(i!=j){
						if(distancias[j][i]>0)
						{
							if(disponibilidad[i]==1 && disponibilidad[j]==1)
							{
								if(distancias[j][i]<min){
									min=distancias[j][i];
									fila=i;
									columna=j;
								}
							}
						}
					}	
				}
			}
			
			cout<<"ciudad : "<<columna+1<<" viaja a ciudad "<<fila+1<<" recorriendo "<<min<<" km."<<endl;//---------------------
			
			posicion_actual[columna]=fila+1;//asigna posicion del visitante por la del local	
			cout<< "Posiciones : ";//------------------------------------------------------------------------------------------
			for(int i=0; i<6; i++)
				cout <<" c"<<i+1<<"= "<<posicion_actual[i];
			cout<<endl;

			disponibilidad[fila]=0; //declara indisponible a este equipo para poder viajar o recibir visita
			disponibilidad[columna]=0; //declara indisponible a este equipo para poder viajar o recibir visita
			cout<< "Disponibilidad : ";//--------------------------------------------------------------------------------------
			for(int i=0; i<6; i++)
				cout <<" c"<<i+1<<"= "<<disponibilidad[i];
			cout<<endl;


			distancias[columna][fila]=-1;
			//mostrar matriz
			for(int i = 0; i<6;i++)
			{
			 	cout<<endl;
			 	for(int j = 0; j<6;j++)
			 	{
			 		cout<<distancias[i][j];
			 		if(j<6-1)
			 			cout<<" - ";
			 	}
			 	cout<< endl;
			}
			min=999999999;//reset de min para poder volver a buscar un nuevo minimo
		}
		//Termina 1 fecha
		for(int i=0; i<6; i++)//todos disponibles otra vez para poder viajar o recibir visitas 
		{
			disponibilidad[i]=1;
		}

		//fechas
		numero_f=numero_fecha;
		cout<<"Fecha: "<<numero_f+1<<endl;
		for(int k=0;k<6;k++){// imprime la cantidad de veces que hay por fecha; --------------------- cambiar 6 por numero_equipos
			if(posicion_actual[k]!=posicion_original[k])
			{
				cout<<"Local: "<< posicion_actual[k] <<" - Visitante: "<< k+1 <<endl;
			}
		}
		numero_fecha++;

		cout<<"Posiciones finales por fecha: ";
		for(int h=0; h<6; h++){//asigna posicion actual como la siguiente posicion original
			posicion_original[h]=posicion_actual[h];//---- guarda valores desde 1 (no el 0)
			cout<< posicion_actual[h]<<", ";
		}


		for(int i=0; i<6; i++)
		{
			for(int j=0; j<6; j++)
			{
				if(i!=j)
				{
					if(distancias[i][j]>0)
					{
						distancias[i][j]=distancias_original[posicion_actual[i]-1][j];
					}
				}

			}
		}

		//mostrar matriz
		for(int i = 0; i<6;i++)
		{
			cout<<endl;
			for(int j = 0; j<6;j++)
			{
				cout<<distancias[i][j];
				if(j<6-1)
					cout<<" - ";
			}
			cout<< endl;
		}

		cout<<endl;
		cout<<endl;
	}


	return 0;
}//i, j , z , k, h, m
